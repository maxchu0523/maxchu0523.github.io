{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = [];\nconst addTodoReducer = createSlice({\n  name: \"todos\",\n  initialState,\n  reducers: {\n    //here we will write our reducer\n    //Adding todos\n    addTodos: (state, action) => {\n      state.push(action.payload);\n      return state;\n    },\n    //remove todos\n    removeTodos: (state, action) => {\n      return state.filter(item => item.id !== action.payload.id);\n    },\n    //update todos\n    updateTodos: (state, action) => {\n      return state.map(todo => {\n        if (todo.id === action.payload.id) {\n          return {\n            ...todo,\n            todo: action.payload.todo,\n            completed: action.payload.completed\n          };\n        }\n        return todo;\n      });\n    }\n  }\n});\nexport const {\n  addTodos,\n  removeTodos,\n  updateTodos\n} = addTodoReducer.actions;\nexport const reducer = addTodoReducer.reducer;","map":{"version":3,"names":["createSlice","initialState","addTodoReducer","name","reducers","addTodos","state","action","push","payload","removeTodos","filter","item","id","updateTodos","map","todo","completed","actions","reducer"],"sources":["/Users/maxchu/Dev/maxchu0523.github.io/src/redux/reducer.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { ITodoItem } from \"../interface\";\n\nconst initialState: ITodoItem[] = [];\n\nconst addTodoReducer = createSlice({\n    name: \"todos\",\n    initialState,\n    reducers: {\n      //here we will write our reducer\n      //Adding todos\n      addTodos: (state, action) => {\n        state.push(action.payload);\n        return state;\n      },\n      //remove todos\n      removeTodos: (state, action) => {\n        return state.filter((item) => item.id !== action.payload.id);\n      },\n      //update todos\n      updateTodos: (state, action) => {\n        return state.map((todo) => {\n          if (todo.id === action.payload.id) {\n            return {\n              ...todo,\n              todo: action.payload.todo,\n              completed: action.payload.completed,\n            };\n          }\n          return todo;\n        });\n      },\n    },\n  });\n\n  export const {\n    addTodos,\n    removeTodos,\n    updateTodos,\n  } = addTodoReducer.actions;\n  export const reducer = addTodoReducer.reducer;\n  "],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAG9C,MAAMC,YAAyB,GAAG,EAAE;AAEpC,MAAMC,cAAc,GAAGF,WAAW,CAAC;EAC/BG,IAAI,EAAE,OAAO;EACbF,YAAY;EACZG,QAAQ,EAAE;IACR;IACA;IACAC,QAAQ,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;MAC1B,OAAOH,KAAK;IACd,CAAC;IACD;IACAI,WAAW,EAAE,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC9B,OAAOD,KAAK,CAACK,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKN,MAAM,CAACE,OAAO,CAACI,EAAE,CAAC;IAC9D,CAAC;IACD;IACAC,WAAW,EAAE,CAACR,KAAK,EAAEC,MAAM,KAAK;MAC9B,OAAOD,KAAK,CAACS,GAAG,CAAEC,IAAI,IAAK;QACzB,IAAIA,IAAI,CAACH,EAAE,KAAKN,MAAM,CAACE,OAAO,CAACI,EAAE,EAAE;UACjC,OAAO;YACL,GAAGG,IAAI;YACPA,IAAI,EAAET,MAAM,CAACE,OAAO,CAACO,IAAI;YACzBC,SAAS,EAAEV,MAAM,CAACE,OAAO,CAACQ;UAC5B,CAAC;QACH;QACA,OAAOD,IAAI;MACb,CAAC,CAAC;IACJ;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXX,QAAQ;EACRK,WAAW;EACXI;AACF,CAAC,GAAGZ,cAAc,CAACgB,OAAO;AAC1B,OAAO,MAAMC,OAAO,GAAGjB,cAAc,CAACiB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}