{"ast":null,"code":"var _jsxFileName = \"/Users/maxchu/Dev/maxchu0523.github.io/src/components/to-do-item.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { removeTodos, updateTodos } from \"../redux/reducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TodoItem = props => {\n  _s();\n  const todos = useSelector(state => state);\n  const tempTodo = todos.find(function (todo) {\n    return todo.id === props.id;\n  });\n  let [todo, setTodo] = useState(tempTodo);\n  const dispatch = useDispatch();\n  const onClickUpdate = () => {\n    if (todo) {\n      const tempTodo = {\n        id: todo.id,\n        todo: todo.todo,\n        completed: !todo.completed\n      };\n      setTodo(tempTodo);\n      dispatch(updateTodos(tempTodo));\n    }\n  };\n  const onClickrRemove = () => {\n    dispatch(removeTodos(todo));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: todo ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex mb-4 items-center\",\n        children: [!todo.completed ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"w-full text-grey-darkest\",\n            children: todo.todo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onClickUpdate,\n            className: \"flex-no-shrink p-2 ml-4 mr-2 border-2 rounded hover:text-white text-grey border-grey hover:bg-grey\",\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"w-full line-through text-grey-darkest\",\n            children: todo.todo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onClickUpdate,\n            className: \"flex-no-shrink p-2 ml-4 mr-2 border-2 rounded hover:text-white text-green border-green hover:bg-green\",\n            children: \"Not Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClickrRemove,\n          className: \"flex-no-shrink p-2 ml-2 border-2 rounded text-red border-red hover:text-white hover:bg-red\",\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false);\n};\n_s(TodoItem, \"gHPINRPMbaiRuGaqJelkqFD6STY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = TodoItem;\nexport default TodoItem;\nvar _c;\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"names":["React","useState","removeTodos","updateTodos","useDispatch","useSelector","TodoItem","props","todos","state","tempTodo","find","todo","id","setTodo","dispatch","onClickUpdate","completed","onClickrRemove"],"sources":["/Users/maxchu/Dev/maxchu0523.github.io/src/components/to-do-item.tsx"],"sourcesContent":["import React, { ChangeEvent, useRef, useState } from \"react\";\nimport { ITodoItem } from \"../interface\";\nimport {\n  addTodos,\n  removeTodos,\n  updateTodos,\n} from \"../redux/reducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n\nconst TodoItem = (props: ITodoItem) => {\n  const todos = useSelector((state: ITodoItem[]) => state);\n  const tempTodo = todos.find(function (todo) {\n    return todo.id === props.id;\n  });\n\n  let [todo, setTodo] = useState(tempTodo);\n  const dispatch = useDispatch()\n\n\n  const onClickUpdate = () => {\n    if (todo) {\n      const tempTodo: ITodoItem = {\n        id: todo.id,\n        todo: todo.todo,\n        completed: !todo.completed,\n      }\n      setTodo(tempTodo);\n      dispatch(updateTodos(tempTodo));\n    }\n  }\n\n\n\n  const onClickrRemove = () => {\n    dispatch(removeTodos(todo));\n  };\n\n\n\n\n  return (\n    <>\n      {\n        todo ?\n          <>\n            <div className=\"flex mb-4 items-center\">\n              {\n                !todo.completed ?\n                  <>\n                    <p className=\"w-full text-grey-darkest\">{todo.todo}</p>\n                    <button onClick={onClickUpdate} className=\"flex-no-shrink p-2 ml-4 mr-2 border-2 rounded hover:text-white text-grey border-grey hover:bg-grey\">Completed</button>\n                  </>\n                  :\n                  <>\n                    <p className=\"w-full line-through text-grey-darkest\">{todo.todo}</p>\n                    <button onClick={onClickUpdate} className=\"flex-no-shrink p-2 ml-4 mr-2 border-2 rounded hover:text-white text-green border-green hover:bg-green\">Not Completed</button>\n                  </>\n              }\n\n              <button onClick={onClickrRemove} className=\"flex-no-shrink p-2 ml-2 border-2 rounded text-red border-red hover:text-white hover:bg-red\">Remove</button>\n            </div>\n\n          </>\n\n\n\n          :\n          <></>\n      }\n\n    </>\n\n\n\n  );\n};\n\nexport default TodoItem;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAyBC,QAAQ,QAAQ,OAAO;AAE5D,SAEEC,WAAW,EACXC,WAAW,QACN,kBAAkB;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAAC;AAAA;AAGvD,MAAMC,QAAQ,GAAIC,KAAgB,IAAK;EAAA;EACrC,MAAMC,KAAK,GAAGH,WAAW,CAAEI,KAAkB,IAAKA,KAAK,CAAC;EACxD,MAAMC,QAAQ,GAAGF,KAAK,CAACG,IAAI,CAAC,UAAUC,IAAI,EAAE;IAC1C,OAAOA,IAAI,CAACC,EAAE,KAAKN,KAAK,CAACM,EAAE;EAC7B,CAAC,CAAC;EAEF,IAAI,CAACD,IAAI,EAAEE,OAAO,CAAC,GAAGb,QAAQ,CAACS,QAAQ,CAAC;EACxC,MAAMK,QAAQ,GAAGX,WAAW,EAAE;EAG9B,MAAMY,aAAa,GAAG,MAAM;IAC1B,IAAIJ,IAAI,EAAE;MACR,MAAMF,QAAmB,GAAG;QAC1BG,EAAE,EAAED,IAAI,CAACC,EAAE;QACXD,IAAI,EAAEA,IAAI,CAACA,IAAI;QACfK,SAAS,EAAE,CAACL,IAAI,CAACK;MACnB,CAAC;MACDH,OAAO,CAACJ,QAAQ,CAAC;MACjBK,QAAQ,CAACZ,WAAW,CAACO,QAAQ,CAAC,CAAC;IACjC;EACF,CAAC;EAID,MAAMQ,cAAc,GAAG,MAAM;IAC3BH,QAAQ,CAACb,WAAW,CAACU,IAAI,CAAC,CAAC;EAC7B,CAAC;EAKD,oBACE;IAAA,UAEIA,IAAI,gBACF;MAAA,uBACE;QAAK,SAAS,EAAC,wBAAwB;QAAA,WAEnC,CAACA,IAAI,CAACK,SAAS,gBACb;UAAA,wBACE;YAAG,SAAS,EAAC,0BAA0B;YAAA,UAAEL,IAAI,CAACA;UAAI;YAAA;YAAA;YAAA;UAAA,QAAK,eACvD;YAAQ,OAAO,EAAEI,aAAc;YAAC,SAAS,EAAC,oGAAoG;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAmB;QAAA,gBAChK,gBAEH;UAAA,wBACE;YAAG,SAAS,EAAC,uCAAuC;YAAA,UAAEJ,IAAI,CAACA;UAAI;YAAA;YAAA;YAAA;UAAA,QAAK,eACpE;YAAQ,OAAO,EAAEI,aAAc;YAAC,SAAS,EAAC,uGAAuG;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAuB;QAAA,gBACvK,eAGP;UAAQ,OAAO,EAAEE,cAAe;UAAC,SAAS,EAAC,4FAA4F;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAgB;MAAA;QAAA;QAAA;QAAA;MAAA;IACnJ,iBAEL,gBAKH;EAAK,iBAGR;AAKP,CAAC;AAAC,GAlEIZ,QAAQ;EAAA,QACED,WAAW,EAMRD,WAAW;AAAA;AAAA,KAPxBE,QAAQ;AAoEd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}